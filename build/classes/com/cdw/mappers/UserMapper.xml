<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdw.dao.UserDao">
	
	<select id="login" parameterType="com.cdw.entity.UserModel" resultType="com.cdw.entity.UserModel">
		select u.*, r.roleName from t_user u left join t_role r on u.roleType = r.roleType
		<where>
			u.userName = #{user.userName}
			and u.password = #{user.password}
			and u.roleType = #{user.roleType}
		</where> 
	</select>
	
	<select id="getUserList" resultType="com.cdw.entity.UserModel">
		select u.*, r.roleName from t_user u left join t_role r on u.roleType = r.roleType
		<where>
			<if test="userName != null and userName != ''">
				and userName like #{userName}
			</if>
			<if test="roleType != null and roleType != ''">
				and roleType = #{roleType}
			</if>
		</where>
		<if test="start != null and size != null">
				limit #{start}, #{size}
		</if>
	</select>
	
	<select id="getTotal" resultType="Long">
		select count(*) from t_user
		<where>
			<if test="userName != null and userName != ''">
				and userName like #{userName}
			</if>
			<if test="roleType != null and roleType != ''">
				and roleType = #{roleType}
			</if>
		</where>
	</select>
	
	<insert id="addUser" parameterType="com.cdw.entity.UserModel">
		insert into t_user values(null,#{user.userName},#{user.password},#{user.trueName},
		#{user.email},#{user.phone},#{user.roleType})
	</insert>
	
	<update id="updateUser" parameterType="com.cdw.entity.UserModel">
		update t_user
		<set>
			<if test="user.userName != null and user.userName != ''">
				userName = #{user.userName},
			</if>
			<if test="user.password != null and user.password != ''">
				password = #{user.password},
			</if>
			<if test="user.trueName != null and user.trueName != ''">
				trueName = #{user.trueName},
			</if>
			<if test="user.email != null and user.email != ''">
				email = #{user.email},
			</if>
			<if test="user.phone != null and user.phone != ''">
				phone = #{user.phone},
			</if>
			<if test="user.roleType != null and user.roleType != ''">
				roleType = #{user.roleType}
			</if>
		</set>
		<where>
			id = #{user.id}
		</where>
	</update>
	
	<delete id="deleteUser" parameterType="Integer">
		delete from t_user where id in 
		<foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
</mapper> 